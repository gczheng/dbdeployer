#!{{.ShellPath}}
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using {{.TemplateName}} on {{.DateTime}}
source {{.SandboxDir}}/sb_include
$SBDIR/use -e 'create database if not exists sbtest'

option=$1
if [ -z "$option" ]
then
    echo "Syntax: $0 {prepare|run}"
    exit 1
fi

[ -z "$SB_DATABASE" ] && SB_DATABASE=sbtest

sysbench_version=$(sysbench --version | awk '{print $2}')

if [ -z "$sysbench_version" ]
then
    echo "sysbench version not found"
    exit 1
fi

linux_sysbench_path=/usr/share/sysbench
mac_os_sysbench_path=/usr/local/Cellar/sysbench/$sysbench_version/share/sysbench
sysbench_path=$linux_sysbench_path

if [ ! -d $sysbench_path ]
then
    sysbench_path=$mac_os_sysbench_path
fi
if [ ! -d $sysbench_path ]
then
    echo "sysbench path not found in either $linux_sysbench_path or $mac_os_sysbench_path"
    exit 1
fi

cd $SBDIR
./use -e "CREATE DATABASE IF NOT EXISTS $SB_DATABASE"
case $option in
    prepare)
      sysbench --db-driver=mysql \
	    --mysql-user={{.DbUser}} \
        --mysql-password={{.DbPassword}} \
        --mysql-socket={{.SocketFile}} \
        --mysql-db=$SB_DATABASE \
        --range_size=100 \
        --table_size=5000 \
        --tables=100 \
        --threads=1 \
        --events=0 \
        --time=60 \
        --rand-type=uniform \
        $sysbench_path/oltp_read_only.lua \
        prepare
    ;;
    run)
      sysbench --db-driver=mysql \
        --mysql-user={{.DbUser}} \
        --mysql-password={{.DbPassword}} \
        --mysql-socket={{.SocketFile}} \
        --mysql-db=sbtest \
        --range_size=100 \
        --table_size=5000 \
        --tables=100 \
        --threads=10 \
        --events=0 \
        --time=6000 \
        --rand-type=uniform \
        $sysbench_path/oltp_read_write.lua \
        --report-interval=1 run
    ;;
    *)
      echo "invalid command '$option' - accepted: prepare|run"
      exit 1
    ;;
esac

#!{{.ShellPath}}
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using {{.TemplateName}} on {{.DateTime}}
source {{.SandboxDir}}/sb_include

request=$1

#
# This script has the purpose of producing useful
# metadata about the sandbox without need of
# querying the database server.
# The script output can be used by other shell scripts
# to gather information needed for decision making.
#
function show_help {
    exit_code=$1
    echo "Syntax: $0 request"
    echo "Available requests:"
    echo "  version"
    echo "  major"
    echo "  minor"
    echo "  rev"
    echo "  short (= major.minor)"
    echo "  sversion (=sortable version string)"
    echo ""
    echo "  host"
    echo "  basedir"
    echo "  cbasedir (Client Basedir)"
    echo "  datadir"
    echo "  port"
    echo "  xport (MySQLX port)"
    echo "  aport (Admin port)"
    echo "  socket"
    echo "  serverid (server id)"
    echo "  pid (Process ID)"
    echo "  pidfile (PID file)"
    echo "  flavor"
    echo "  sbhome (SANDBOX_HOME)"
    echo "  sbbin (SANDBOX_BINARY)"
    echo "  sbtype (Sandbox Type)"
    exit $exit_code
}

case $request in
    version)
        echo $MYSQL_VERSION
        ;;
    major)
        echo $MYSQL_VERSION_MAJOR
        ;;
    minor)
        echo $MYSQL_VERSION_MINOR
        ;;
    rev)
        echo $MYSQL_VERSION_REV
        ;;
    short)
        echo "$MYSQL_VERSION_MAJOR.$MYSQL_VERSION_MINOR"
        ;;
    sversion)
        echo "$MYSQL_SORTABLE_VERSION"
        ;;
    host)
        echo "$SBHOST"
        ;;
    datadir)
        echo "$DATADIR"
        ;;
    port)
        echo "$MYSQL_PORT"
        ;;
    serverid)
        if [ -n "$(is_running)" ]
        then
            $SBDIR/use -BN -e "select @@server_id"
        else
            echo "$SERVER_ID"
        fi
        ;;
    xport)
        echo "$MYSQLX_PORT"
        ;;
    aport)
        echo "$ADMIN_PORT"
        ;;
    socket)
        echo "$SOCKET_FILE"
        ;;
    pidfile)
        echo "$PIDFILE"
        ;;
    pid)
        if [ -f "$PIDFILE" ]
        then
            cat $PIDFILE
        fi
        ;;
    basedir)
        echo "$BASEDIR"
        ;;
    cbasedir)
        echo "$CLIENT_BASEDIR"
        ;;
    sbhome)
        echo "$SANDBOX_HOME"
        ;;
    sbbin)
        echo "$SANDBOX_BINARY"
        ;;
    flavor)
        echo "$FLAVOR"
        ;;
    sbtype)
        echo "$SANDBOX_TYPE"
        ;;
    help)
        show_help 0
        ;;
    *)
        echo "unknown option"
        show_help 1
esac

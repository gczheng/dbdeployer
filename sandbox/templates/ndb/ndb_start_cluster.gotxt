#!{{.ShellPath}}
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using {{.TemplateName}} on {{.DateTime}}
SBDIR={{.SandboxDir}}
BASEDIR={{.Basedir}}
cd $SBDIR

if [ ! -d ndb_conf ]
then
    mkdir ndb_conf
fi

if [ ! -d ndb_conf ]
then
    echo "Directory 'ndb_conf' not found in $PWD"
    exit 1
fi

if [ -f config.ini ]
then
    mv config.ini ndb_conf
fi

if [ -f cluster_initialized ]
then
    echo "cluster already initialized on $(cat cluster_initialized)"
    exit 0
fi

function check_exit_code {
    exit_code=$?
    msg="$1"
    if [ "$exit_code" != "0" ]
    then
        echo "ERROR : $msg"
        exit $exit_code
    fi
}

NUM_NODES={{.NumNodes}}
NUM_NDB_NODES={{.NumNdbNodes}}
cluster_port={{.ClusterPort}}

binary_config=ndb_1_config.bin
count=1

while [ -f ndb_conf/${binary_config}.$count ]
do
    rm -f ndb_conf/${binary_config}.$count
    count=$((count+1))
done

$BASEDIR/bin/ndb_mgmd -f ndb_conf/config.ini \
    --configdir=$PWD/ndb_conf --ndb-connectstring="host=localhost:$cluster_port"
check_exit_code "ndb initialization"

if [ -f stopped_cluster ]
then
    rm -f stopped_cluster
fi

for i in $(seq 2 $NUM_NDB_NODES)
do
    $BASEDIR/bin/ndbmtd --ndb-nodeid=$i --ndb-connectstring="host=localhost:$cluster_port"
    check_exit_code "ndb node $i start"
done

for i in $(seq 1 $NUM_NODES)
do
	echo "executing 'start' on {{.NodeLabel}} $i"
	$SBDIR/{{.NodeLabel}}$i/start 
    check_exit_code "mysql node $i start"
	$SBDIR/{{.NodeLabel}}$i/load_grants
    check_exit_code "mysql node $i load grants"
done
date > cluster_initialized

#!{{.ShellPath}}
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using template {{.TemplateName}} on {{.DateTime}}
cd $(dirname $0)
source cookbook_include.sh

version=$1
[ -z "$version" ] && version=$(dbdeployer info version)
check_version $version
path_version=$(echo $version | tr '.' '_')

master_slave1=ms_${path_version}_1
master_slave2=ms_${path_version}_2

run dbdeployer deploy replication $version --topology=master-slave --concurrent \
    --port-as-server-id --sandbox-directory=$master_slave1 \
    -c log-slave-updates

	run dbdeployer deploy replication $version --topology=master-slave --concurrent \
    --port-as-server-id --sandbox-directory=$master_slave2 \
    -c log-slave-updates

run dbdeployer sandboxes --full-info

gtid_executed=$($SANDBOX_HOME/$master_slave2/m -BN -e 'select @@global.gtid_executed')
$SANDBOX_HOME/$master_slave1/m -e "set global gtid_purged='$gtid_executed'"

run $SANDBOX_HOME/$master_slave1/replicate_from $master_slave2

echo "# Inserting data in $master_slave2 master"
(set -x
$SANDBOX_HOME/$master_slave2/m -e 'create table if not exists test.t1 (id int not null primary key, server_id int )'
$SANDBOX_HOME/$master_slave2/m -e 'insert into test.t1 values (1, @@server_id)'
)

sleep 1
echo "# Retrieving data from $master_slave1 slave"
echo "# At this point, the data was replicated twice"
(set -x
$SANDBOX_HOME/$master_slave1/s1 -e 'select *, @@port from test.t1'
)


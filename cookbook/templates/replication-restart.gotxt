#!{{.ShellPath}}
{{.Copyright}}
# Generated by dbdeployer {{.AppVersion}} using template {{.TemplateName}} on {{.DateTime}}
cd $(dirname $0)
source cookbook_include.sh

version=$1
[ -z "$version" ] && version=$(dbdeployer info version)
check_version $version

if [ -z "$(dbdeployer sandboxes | grep 'master-slave\s*'$version)" ]
then
    echo "master-slave version $version is not installed"
    echo "Run './master-slave-deployment.sh $version' before trying again"
    exit 1
fi

sandbox_dir=$SANDBOX_HOME/rsandbox_$(echo $version | tr '.' '_' )

header "Checking the value for max-connections in all nodes"
(set -x
$sandbox_dir/use_all 'select @@max_connections'
)

header "Restarting all nodes with the new value"
(set -x
$sandbox_dir/restart_all --max-connections=66
)

header "Checking the new value for max-connections in all nodes"
(set -x
$sandbox_dir/use_all 'select @@max_connections'
)

header "Restarting slave #2 without specifying any values."
run $sandbox_dir/node2/restart

header "Checking the value for max-connections in all nodes: node #2 has again the default value"
(set -x
$sandbox_dir/use_all 'select @@max_connections'
)

header "Adding a custom number of connection permanently to slave #2 ( NOTE: no dashes! )"
(set -x
$sandbox_dir/node2/add_option max-connections=99
)

header "Restarting slave #2 without specifying any values. We'll see that its own value is preserved"
run $sandbox_dir/node2/restart

header "Checking the value for max-connections in all nodes: node #2 has kept its own value"
(set -x
$sandbox_dir/use_all 'select @@max_connections'
)

